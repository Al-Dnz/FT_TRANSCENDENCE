version: "3"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - backend
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  auth-api:
    container_name: auth-api
    build:
      context: auth-api
      dockerfile: Dockerfile
    networks:
      - backend
    ports:
      - 3000:3000
    env_file: .env

  user-api:
    container_name: user-api
    build:
      context: ./
      dockerfile: ./user-api/Dockerfile
    networks:
      - backend
    ports:
      - 3003:3000
    env_file: .env
    volumes:
      - ./upload:/app/upload

  nginx:
    container_name: nginx
    image: nginx:1.19-alpine
    networks:
      - backend
      - frontend
    ports:
      - 8000:80
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf

  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:v4.15.5
    networks:
      - backend
    ports:
      - 8080:8080
    environment:
      API_URL: docs/swagger.yml
    volumes:
      - type: bind
        source: ./swagger-ui/swagger.yml
        target: /usr/share/nginx/html/docs/swagger.yml

  front-end:
    container_name: front-end
    build:
      context: front
      dockerfile: Dockerfile
    networks:
      - frontend
    ports:
      - 3002:80
    env_file: .env

  chat:
    container_name: chat
    build:
      context: ./
      dockerfile: ./chat/Dockerfile
    networks:
      - backend
    ports:
      - 3008:3000
    depends_on:
      - "postgres"
    env_file: .env

volumes:
  postgres-data:
    name: postgres-data

networks:
  backend:
    name: backend_net
    driver: bridge

  frontend:
    name: frontend_net
    driver: bridge
